version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: pdf_converter_postgres
    environment:
      POSTGRES_USER: pdf_converter
      POSTGRES_PASSWORD: pdf_converter_password
      POSTGRES_DB: pdf_converter_prod
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pdf_converter -d pdf_converter_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - pdf_converter_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pdf_converter_app
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: "ecto://pdf_converter:pdf_converter_password@postgres:5432/pdf_converter_prod"
      SECRET_KEY_BASE: "${SECRET_KEY_BASE:-pleasechangethissecretkeytosomethingsecure1234567890}"
      PHX_HOST: "${PHX_HOST:-localhost}"
      PORT: "4000"
      POOL_SIZE: "10"
    volumes:
      - uploads_data:/app/priv/static/uploads
      - converted_data:/app/priv/static/converted
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - pdf_converter_network

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local
  converted_data:
    driver: local

networks:
  pdf_converter_network:
    driver: bridge
